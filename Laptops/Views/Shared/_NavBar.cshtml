@{
    var initials = Context.Session.GetString("Initials") ?? "NA";
    var email = Context.Session.GetString("Email") ?? "Not logged in";
}
<header class="fixed top-0 left-0 right-0 bg-blue-900 px-6 py-3 z-50 shadow-md">
    <div class="flex items-center justify-between flex-wrap md:flex-nowrap">
        <!-- Logo -->
        <a href="@Url.Action("Index", "Home")" class="flex items-center space-x-2">
            <img src="/images/logo.webp" alt="mint logo" class="h-14 w-32" />
        </a>

        <!-- Hamburger Button -->
        <button class="md:hidden text-white text-2xl" onclick="document.getElementById('mobileMenu').classList.toggle('hidden')">
            <i class="fas fa-bars"></i>
        </button>

        <!-- Navigation and Icons -->
        <div id="mobileMenu" class="w-full mt-4 md:mt-0 hidden md:flex md:items-center md:justify-end md:space-x-6 text-sm">
            <!-- Nav Links -->
            <div class="flex flex-col md:flex-row md:space-x-6">
                <a asp-controller="Laptops" asp-action="Display"
                   class="transition duration-200 @(ViewContext.RouteData.Values["controller"]?.ToString() == "Laptops" ? "text-white font-bold underline" : "text-white hover:text-green-600")">Home</a>
                <a asp-controller="Home" asp-action="ContactUs"
                   class="transition duration-200 @(ViewContext.RouteData.Values["controller"]?.ToString() == "Home" && ViewContext.RouteData.Values["action"]?.ToString() == "ContactUs" ? "text-white font-bold underline" : "text-white hover:text-green-600")">Contact Us</a>
                <a asp-controller="Home" asp-action="Orders"
                   class="transition duration-200 @(ViewContext.RouteData.Values["controller"]?.ToString() == "Orders" ? "text-white font-bold underline" : "text-white hover:text-green-600")">Orders</a>
            </div>

            <!-- Icons and Profile -->
            <div class="flex items-center space-x-4 mt-4 md:mt-0">
                <!-- Profile Initials -->
                @if (initials != "NA")
                {
                    <div class="w-10 h-10 bg-green-600 text-white rounded-full flex items-center justify-center text-sm font-bold" title="@email">
                        @initials
                    </div>
                }
                else
                {
                    <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 text-white" viewBox="0 0 24 24" fill="currentColor">
                        <path d="M12 12c2.7 0 5-2.3 5-5s-2.3-5-5-5-5 2.3-5 5 2.3 5 5 5zm0 2c-3.3 0-10 1.7-10 5v3h20v-3c0-3.3-6.7-5-10-5z" />
                    </svg>
                }

            <a href="javascript:void(0)" onclick="openSidebar()" class="relative inline-block">

                <!-- Cart Icon -->
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                     stroke="currentColor" class="w-7 h-7 text-white hover:text-green-400 transition">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                          d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13l-1.293 2.293a1 1 0 00.217 1.32l.083.07a1 1 0 001.32-.217L9 14h6l1.293 2.293a1 1 0 001.32.217l.083-.07a1 1 0 00.217-1.32L17 13M7 13V6h10v7" />
                </svg>

                <!-- Cart count badge -->
                <span id="cart-count" class="absolute -top-2 -right-2 bg-red-600 text-white text-xs w-5 h-5 flex items-center justify-center rounded-full">
                    0
                </span>
            </a>

                <!-- Logout -->
                <a href="@Url.Action("Logout", "Account")" class="text-white hover:text-red-500 transition">
                    <i class="fas fa-sign-out-alt text-xl"></i>
                </a>
            </div>
        </div>
    </div>
</header>

<!-- Sidebar Backdrop -->
<div id="sidebar-backdrop" class="fixed inset-0 bg-black bg-opacity-50 hidden z-40" onclick="closeSidebar()"></div>

<!-- Cart Sidebar -->
<div id="cart-sidebar" class="fixed top-0 right-0 w-96 max-w-full h-full bg-white shadow-lg z-50 transform translate-x-full transition-transform duration-300 overflow-y-auto">
    <div class="flex justify-between items-center p-4 border-b">
        <h2 class="text-lg font-semibold">My Shopping Cart</h2>
        <button onclick="closeSidebar()" class="text-gray-600 hover:text-red-600">&times;</button>
    </div>
    <div id="sidebar-content" class="p-4">

        <!-- Cart items will be injected here -->
        <p>Loading...</p>
    </div>
</div>



<script>
    function updateCartCount() {
        fetch('/Cart/GetCartCount')
            .then(res => res.json())
            .then(data => {
                const countElement = document.getElementById('cart-count');
                if (countElement) {
                    countElement.textContent = data.count;
                    // Hide badge if count is 0, show otherwise
                    countElement.style.display = data.count > 0 ? 'flex' : 'none';
                }
            });
    }

    // Call updateCartCount when the page finishes loading
    document.addEventListener("DOMContentLoaded", function () {
        updateCartCount();
    });


    function openSidebar() {
        document.getElementById('cart-sidebar').classList.remove('translate-x-full');
        document.getElementById('sidebar-backdrop').classList.remove('hidden');

        // Fetch sidebar content
        fetch('/Cart/Sidebar')
            .then(res => res.text())
            .then(html => {
                document.getElementById('sidebar-content').innerHTML = html;
            });
    }

    function closeSidebar() {
        document.getElementById('cart-sidebar').classList.add('translate-x-full');
        document.getElementById('sidebar-backdrop').classList.add('hidden');
    }


    // Delegate click handling after DOM is loaded
    document.addEventListener('DOMContentLoaded', function () {
        document.body.addEventListener('submit', function (e) {
            if (e.target.classList.contains('remove-from-cart-form')) {
                e.preventDefault(); // Stop default redirect behavior

                const form = e.target;
                const actionUrl = form.getAttribute('action');
                const formData = new FormData(form);
                
                // Allow item to be re-added to cart
                const card = document.getElementById('laptop-card+' + form.id);
                if (card) {
                    card.setAttribute('data-existsincart', 'False');
                }

                fetch(actionUrl, {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.text())
                    .then(html => {
                        document.getElementById('sidebar-content').innerHTML = html;
                        updateCartCount();
                    })
                    .catch(error => console.error('Error removing item:', error));
            }
        });
    });
</script>





