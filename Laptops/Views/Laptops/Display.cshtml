@model IEnumerable<Laptops.Models.LaptopViewModel>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
    <title>Laptop Exchange</title>
</head>
<body class="min-h-screen font-sans">

    @Html.Partial("_NavBar")

    @{
        var firstLaptop = Model.FirstOrDefault();
    }
    <div class="bg-gradient-to-b from-[#1F44BB] via-[#EEF3FF] to-white py-20">
        <div class="flex flex-col md:flex-row items-center justify-center px-6 md:px-16 py-10 gap-10">
            <!-- Left Column -->
            <div class="md:w-1/2 text-center md:text-left space-y-6">
                <h1 class="text-4xl md:text-5xl font-bold text-gray-900">MintGroup Device Exchange</h1>
                <p class="text-lg text-gray-700">
                    Your trusted space to view pre-owned,
                    <span class="text-green-600 font-medium">IT-approved laptops</span>. Every device is verified. Every listing is limited.
                </p>
                <div class="relative max-w-md mx-auto md:mx-0">
                    <input type="text" id="searchInput" placeholder="Search by brand, RAM, or keyword..."
                           class="w-full pl-10 pr-4 py-2 rounded-full border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500" />
                    <div class="absolute top-2.5 left-3 text-gray-400">
                        <i class="fas fa-search"></i>
                    </div>
                </div>
                <p class="text-sm text-gray-500 italic">MintGroup internal use only</p>
            </div>



            <!-- Right Column -->
            @if (firstLaptop != null)
            {
                <div class="md:w-1/2 bg-white rounded-2xl shadow-lg p-6 w-full max-w-md laptop-card"
                     data-brand="@firstLaptop.Brand" data-ram="@firstLaptop.Ram" data-price="@firstLaptop.Price"
                     data-imgurl="@firstLaptop.ImgUrl" data-model="@firstLaptop.Model" data-storage="@firstLaptop.Storage"
                     data-screensize="@firstLaptop.ScreenSize" data-color="@firstLaptop.Color"
                     data-description="@firstLaptop.Description" data-laptopid="@firstLaptop.LaptopId" data-batterycondition="@firstLaptop.BatteryLife">

                    <img src="@Url.Content("~/" + firstLaptop.ImgUrl)" alt="@firstLaptop.Model" class="rounded-xl w-full object-contain h-52 mb-4" />

                    <h2 class="text-xl font-bold text-blue-700 mb-2">@firstLaptop.Brand @firstLaptop.Model</h2>
                    <p class="text-gray-700 flex items-center mb-1">
                        <i class="fas fa-microchip mr-2 text-gray-500"></i>
                        Gen Intel Core i5 with NVIDIA GeForce RTX 3050
                    </p>
                    <p class="text-gray-700 flex items-center mb-1">
                        <i class="fas fa-memory mr-2 text-purple-600"></i>
                        <span class="font-semibold text-purple-600">RAM:</span> @firstLaptop.Ram
                    </p>
                    <p class="text-gray-700 flex items-center mb-1">
                        <i class="fas fa-hdd mr-2 text-orange-500"></i>
                        <span class="font-semibold text-orange-500">Storage:</span> @firstLaptop.Storage
                    </p>
                    <p class="text-green-600 font-bold text-lg mt-2">R @firstLaptop.Price</p>
                    <button class="mt-4 bg-[#73AC4B] hover:bg-green-700 text-white font-semibold text-lg px-8 py-3 rounded-full hover:bg-green-600 transition-all duration-300 w-full text-center flex items-center justify-center gap-2 view-details-btn hover:bg-blue-800 transition-all">
                        View Details
                        <i class="fas fa-arrow-right transform transition-transform duration-300 group-hover:translate-x-1"></i>
                    </button>
                </div>
            }

        </div>
    </div>

    <!-- Filters & Sort Section (Moved to Top of Laptops Grid) -->
    <div class="max-w-7xl mx-auto mt-10 px-4">
        <!-- 🔽 FILTERS & SORT CONTROLS FOR LAPTOPS -->
        <div class="flex flex-wrap items-center justify-between gap-4 p-6 bg-white rounded-2xl shadow-md mb-6 border border-gray-200">
            <!-- Filters -->
            <div class="flex flex-wrap items-center gap-6">
                <div class="flex flex-col">
                    <label for="brand" class="text-sm font-semibold text-gray-700">Brand</label>
                    <select id="brandFilter" class="px-3 py-2 border rounded-md text-sm focus:ring-2 focus:ring-[#1F44BB]">
                        <option value="">All</option>
                        <option value="Lenovo">Lenovo</option>
                        <option value="Dell">Dell</option>

                    </select>
                </div>
                <div class="flex flex-col">
                    <label for="ram" class="text-sm font-semibold text-gray-700">RAM</label>
                    <select id="ramFilter" class="px-3 py-2 border rounded-md text-sm focus:ring-2 focus:ring-[#1F44BB]">
                        <option value="">All</option>
                        <option value="8GB">8GB</option>
                        <option value="16GB">16GB</option>
                        <option value="32GB">32GB</option>
                    </select>
                </div>

                <div class="flex flex-col">
                    <label for="role" class="text-sm font-semibold text-gray-700">Role</label>
                    <select id="roleFilter" class="px-3 py-2 border rounded-md text-sm focus:ring-2 focus:ring-[#1F44BB]">
                        <option value="">All</option>
                        <option value="Gamer">Gamer</option>
                        <option value="Business">Business</option>
                        <option value="Developer">Developer</option>
                        <option value="General Use">General Use</option>
                    </select>
                </div>
            </div>

            <!-- Sort -->
            <div class="flex flex-col">
                <label for="sort" class="text-sm font-semibold text-gray-700">Sort by</label>
                <select id="sortSelect" class="px-3 py-2 border rounded-md text-sm focus:ring-2 focus:ring-[#73AC4B]">
                    <option value="default">Default</option>
                    <option value="price-low-high">Price: Low to High</option>
                    <option value="price-high-low">Price: High to Low</option>
                    <option value="name-asc">Name: A-Z</option>
                    <option value="name-desc">Name: Z-A</option>
                </select>
            </div>
        </div>
    </div>


        <!-- Laptops Grid Section -->
        <div class="mt-16 px-6 md:px-16">
            <h2 class="text-2xl font-semibold text-gray-800 mb-6">All Available Laptops</h2>
            <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
                @foreach (var laptop in Model)
                {
                    <div class="bg-white rounded-xl border shadow-md p-4 text-center laptop-card"
                         data-brand="@laptop.Brand" data-ram="@laptop.Ram" data-price="@laptop.Price"
                         data-imgurl="@laptop.ImgUrl" data-model="@laptop.Model" data-storage="@laptop.Storage"
                         data-screensize="@laptop.ScreenSize" data-color="@laptop.Color"
                         data-description="@laptop.Description" data-laptopid="@laptop.LaptopId" data-batterycondition="@laptop.BatteryLife">

                        <img src="@Url.Content("~/" + laptop.ImgUrl)" alt="@laptop.Model" class="w-full h-36 object-contain mb-4 rounded" />

                    <div class="flex flex-wrap gap-2 justify-center mb-3">
                        <span class="bg-[#73AC4B] text-white text-xs font-semibold px-3 py-1 rounded-full">@laptop.Brand</span>
                        <span class="bg-blue-700 text-white text-xs font-semibold px-3 py-1 rounded-full">@laptop.Ram</span>
                        <span class="bg-blue-700 text-white text-xs font-semibold px-3 py-1 rounded-full">@laptop.Storage</span>
                    </div>

                    <h3 class="text-base font-medium text-gray-800">@laptop.Brand @laptop.Model</h3>
                    <p class="text-lg font-bold text-blue-700 mt-1">R @laptop.Price</p>

                        <button class="mt-4 bg-[#73AC4B] hover:bg-green-700 text-white font-semibold text-lg px-8 py-3 rounded-full hover:bg-green-600 transition-all duration-300 w-full text-center flex items-center justify-center gap-2 view-details-btn hover:bg-blue-800 transition-all">
                            View Details
                        <i class="fas fa-arrow-right transform transition-transform duration-300 group-hover:translate-x-1"></i>
                        </button>
                    </div>
                }
            </div>
        </div>
    

    <!-- Modal Structure -->
    <div id="detailsModal" class="fixed inset-0 hidden bg-black bg-opacity-50 flex items-center justify-center z-50 overflow-y-auto">
        <div class="bg-white p-6 md:p-10 rounded-xl shadow-xl max-w-4xl w-full relative space-y-4">
            <button id="closeModal" class="absolute top-2 right-2 text-gray-400 hover:text-red-500 text-2xl">&times;</button>

            <!-- Title -->
            <h2 id="modalTitle" class="text-2xl md:text-4xl font-bold text-gray-800 text-center"></h2>

            <div class="flex flex-col md:flex-row gap-8">
                <!-- Left Column (Images) -->
                <div class="md:w-1/2">
                    <div class="relative mb-4">
                        <img id="modalMainImage" src="" alt="Laptop Main" class="w-full h-80 object-cover rounded">
                    </div>
                    <div class="flex space-x-3" id="thumbnailContainer">
                        <!-- First thumbnail comes from the laptop data -->
                        <img id="firstThumb" src="" alt="Thumb 1"
                             class="thumbnail-img w-20 h-20 object-cover rounded border-2 border-transparent cursor-pointer hover:scale-105 transition">

                        <!-- Hardcoded thumbnails -->
                        <img src="/images/howard-bouchevereau-RSCirJ70NDM-unsplash.jpg" alt="Thumb 2"
                             class="thumbnail-img w-20 h-20 object-cover rounded border-2 border-transparent cursor-pointer hover:scale-105 transition">

                        <img src="/images/istockphoto-1429128304-612x612.jpg" alt="Thumb 3"
                             class="thumbnail-img w-20 h-20 object-cover rounded border-2 border-transparent cursor-pointer hover:scale-105 transition">

                        <img src="/images/istockphoto-184735890-612x612.jpg" alt="Thumb 4"
                             class="thumbnail-img w-20 h-20 object-cover rounded border-2 border-transparent cursor-pointer hover:scale-105 transition">
                    </div>


                </div>

                <!-- Right Column (Details) -->
                <div class="md:w-1/2 text-base">
                   

                    <!-- Specs Grid -->
                    <div class="grid grid-cols-2 gap-4 text-gray-700 mt-4">
                        <div><i class="fas fa-memory text-blue-600 mr-2"></i><strong>RAM:</strong> <span id="modalRam"></span></div>
                        <div><i class="fas fa-hdd text-purple-600 mr-2"></i><strong>Storage:</strong> <span id="modalStorage"></span></div>
                        <div><i class="fas fa-laptop text-indigo-600 mr-2"></i><strong>Screen Size:</strong> <span id="modalScreenSize"></span></div>
                        <div><i class="fas fa-palette text-pink-500 mr-2"></i><strong>Color:</strong> <span id="modalColor"></span></div>
                        <div><i class="fas fa-tachometer-alt text-gray-600 mr-2"></i><strong>Battery Condition:</strong> <span id="modalBatteryCondition" class="font-semibold px-2 py-1 rounded text-sm"></span></div>
                    </div>

                    <!-- Description -->
                    <div class="mt-4">
                        <p class="text-gray-800 text-sm"><strong>Description:</strong></p>
                        <p id="modalDescription" class="text-gray-600 text-sm mt-1"></p>
                    </div>
                    

                    <!-- Pricing and Actions -->
                    <div class="bg-white rounded-lg shadow p-6 mt-12">
                        <!-- Price -->
                        <div class=" text-2xl font-bold text-green-600 mt-2">
                            R <span id="modalPrice"></span>
                        </div>

                        <!-- Buttons -->
                        <div class="mt-6 grid grid-cols-1 sm:grid-cols-2 gap-4">
                            <a asp-action="Display" class="text-center border border-green-600 text-green-600 py-2 rounded-md font-semibold hover:bg-red-50 flex items-center justify-center gap-2">
                                <i class="fas fa-arrow-left"></i> Back To Home
                            </a>
                            <a asp-action="ShoppingCart" class="text-center bg-green-600 text-white py-2 rounded-md font-semibold hover:bg-green-700 flex items-center justify-center gap-2">
                                <i class="fas fa-shopping-cart"></i> Add to Cart
                            </a>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>




    <div class="mt-20">
        @Html.Partial("footer")
    </div>

    <script>
            const brandFilter = document.getElementById("brandFilter");
            const ramFilter = document.getElementById("ramFilter");
            const roleFilter = document.getElementById("roleFilter");
            const sortSelect = document.getElementById("sortSelect");
            const searchInput = document.getElementById("searchInput");

            function filterAndSortLaptops() {
                const brand = brandFilter.value.toLowerCase();
                const ram = ramFilter.value.toLowerCase();
                const role = roleFilter.value.toLowerCase();
                const sort = sortSelect.value;
                const search = searchInput.value.toLowerCase();

                const cards = Array.from(document.querySelectorAll(".laptop-card"));

                cards.forEach(card => {
                    const cardBrand = card.dataset.brand.toLowerCase();
                    const cardRam = card.dataset.ram.toLowerCase();
                    const cardRole = card.dataset.role.toLowerCase();
                    const cardName = card.dataset.name.toLowerCase();
                    const cardPrice = card.dataset.price.toLowerCase();

                    const matchesBrand = !brand || cardBrand === brand;
                    const matchesRam = !ram || cardRam === ram;
                    const matchesRole = !role || cardRole === role;
                    const matchesSearch =
                        !search ||
                        cardBrand.includes(search) ||
                        cardRam.includes(search) ||
                        cardRole.includes(search) ||
                        cardName.includes(search) ||
                        cardPrice.includes(search);

                    const show = matchesBrand && matchesRam && matchesRole && matchesSearch;
                    card.style.display = show ? "flex" : "none";
                });

                // Sort logic
                const container = document.querySelector(".grid");
                const visibleCards = cards.filter(card => card.style.display !== "none");

                visibleCards.sort((a, b) => {
                    const aName = a.dataset.name.toLowerCase();
                    const bName = b.dataset.name.toLowerCase();
                    const aPrice = parseFloat(a.dataset.price);
                    const bPrice = parseFloat(b.dataset.price);

                    switch (sort) {
                        case "price-low-high":
                            return aPrice - bPrice;
                        case "price-high-low":
                            return bPrice - aPrice;
                        case "name-asc":
                            return aName.localeCompare(bName);
                        case "name-desc":
                            return bName.localeCompare(aName);
                        default:
                            return 0;
                    }
                });

                visibleCards.forEach(card => container.appendChild(card));
            }

            brandFilter.addEventListener("change", filterAndSortLaptops);
            ramFilter.addEventListener("change", filterAndSortLaptops);
            roleFilter.addEventListener("change", filterAndSortLaptops);
            sortSelect.addEventListener("change", filterAndSortLaptops);
            searchInput.addEventListener("input", () => {
            filterAndSortLaptops();

            const query = searchInput.value.trim();
            if (query.length > 0) {
                const resultsSection = document.querySelector(".grid");
                if (resultsSection) {
                    resultsSection.scrollIntoView({ behavior: "smooth" });
                }
            }
        });

        function changeImage(src, clickedImg = null) {
            document.getElementById("modalMainImage").src = src;

            // Remove highlight from all thumbnails
            document.querySelectorAll(".thumbnail-img").forEach(img => {
                img.classList.remove("ring-2", "ring-blue-500");
            });

            // Add highlight to the clicked thumbnail
            if (clickedImg) {
                clickedImg.classList.add("ring-2", "ring-blue-500");
            }
        }

        // Setup thumbnail click listeners
        document.querySelectorAll(".thumbnail-img").forEach(img => {
            img.addEventListener("click", () => {
                changeImage(img.src, img);
            });
        });

                // Get the modal and close button elements
        const modal = document.getElementById("detailsModal");
        const closeModal = document.getElementById("closeModal");

        // Get all view details buttons
        const viewDetailsButtons = document.querySelectorAll(".view-details-btn");

        // Setup thumbnail click listeners
        document.querySelectorAll(".thumbnail-img").forEach(img => {
            img.addEventListener("click", () => {
                changeImage(img.src, img);
            });
        });

        
        // Modal open logic
        viewDetailsButtons.forEach(button => {
            button.addEventListener("click", (e) => {
                const card = e.target.closest(".laptop-card");

                document.getElementById("modalTitle").innerText = card.dataset.brand + " " + card.dataset.model;

                const firstImageUrl = "/" + card.dataset.imgurl.replace(/^\/+/, "");
                document.getElementById("modalMainImage").src = firstImageUrl;
                document.getElementById("firstThumb").src = firstImageUrl;

                // Clear existing highlights
                document.querySelectorAll(".thumbnail-img").forEach(img => {
                    img.classList.remove("ring-2", "ring-blue-500");
                });

                // Highlight the first one
                document.getElementById("firstThumb").classList.add("ring-2", "ring-blue-500");

                // Fill in modal specs
                document.getElementById("modalPrice").innerText = card.dataset.price;
                document.getElementById("modalRam").innerText = card.dataset.ram;
                document.getElementById("modalStorage").innerText = card.dataset.storage;
                document.getElementById("modalScreenSize").innerText = card.dataset.screensize;
                document.getElementById("modalColor").innerText = card.dataset.color;
                document.getElementById("modalDescription").innerText = card.dataset.description;

                const batteryCondition = parseInt(card.dataset.batterycondition);
                const batteryElem = document.getElementById("modalBatteryCondition");

                batteryElem.innerText = batteryCondition + "%";
                batteryElem.className = "font-semibold px-2 py-1 rounded text-sm";

                if (batteryCondition >= 80) {
                    batteryElem.classList.add("bg-green-100", "text-green-700");
                } else if (batteryCondition >= 50) {
                    batteryElem.classList.add("bg-yellow-100", "text-yellow-700");
                } else {
                    batteryElem.classList.add("bg-red-100", "text-red-700");
                }

                modal.classList.remove("hidden");
            });
        });

        closeModal.addEventListener("click", () => {
            modal.classList.add("hidden");
        });

        
    </script>



</body>
</html>
